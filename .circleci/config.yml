version: 2.1

orbs:
    win: circleci/windows@5.0

jobs:
    build-client:
        docker:
            - image: cimg/node:20.11.0

        working_directory: ~/PlanarAlly/client
        resource_class: large

        steps:
            - checkout:
                  path: ~/PlanarAlly

            - restore_cache:
                  key: npm-{{ checksum "package-lock.json" }}
                  name: Restoring npm cache

            - run:
                  name: npm install
                  command: npm i

            - save_cache:
                  key: npm-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node-modules

            - run:
                  name: Build artifacts
                  command: npm run build

            - persist_to_workspace:
                  root: ../
                  paths:
                      - server

    release-server:
        docker:
            - image: cibuilds/github:0.13.0

        working_directory: ~/PlanarAlly
        resource_class: large

        steps:
            - attach_workspace:
                  at: ./

            - run:
                  name: Create tmp folder
                  command: mkdir /tmp/archives

            - run:
                  name: Zip artifacts
                  command: |
                      VERSION=$(head -1 server/VERSION)
                      zip -r /tmp/archives/planarally-bin-${VERSION}.zip server/*

            - run:
                  name: Gunzip artifacts
                  command: |
                      VERSION=$(head -1 server/VERSION)
                      tar -czf /tmp/archives/planarally-bin-${VERSION}.tar.gz server/*

            - when:
                  condition:
                      not:
                          equal: [ci-test, << pipeline.git.branch >>]
                  steps:
                      - run:
                            name: "Publish release on github"
                            command: |
                                VERSION=$(head -1 server/VERSION)
                                ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace ${VERSION} /tmp/archives

    build-windows:
        executor:
            name: win/default
            size: large

        working_directory: ~/PlanarAlly/server

        steps:
            - attach_workspace:
                  at: ../

            - run:
                  name: Create archives folder
                  command: mkdir C:\Users\circleci\archives

            - run:
                  name: Create dist folder
                  command: mkdir C:\Users\circleci\dist

            - run:
                  name: Upgrade pip
                  command: python -m pip install --upgrade pip

            - run:
                  name: Install python dependencies
                  command: python -m pip install -r requirements.txt

            - run: python -m pip install wheel

            - run: python -m pip install ordered-set

            - run: python -m pip install nuitka

            # - run:
            #       name: Install pyinstaller
            #       command: python -m pip install pyinstaller

            # - run:
            #       name: Download PyInstaller
            #       command: Invoke-WebRequest https://github.com/pyinstaller/pyinstaller/archive/refs/tags/v5.6.2.zip -OutFile .\pyinstaller.zip

            # - run: unzip.exe .\pyinstaller.zip

            # - run:
            #       name: Compile bootloader
            #       command: cd .\pyinstaller-5.6.2\bootloader; if ($?) { python .\waf all }

            # - run: cd .\pyinstaller-5.6.2; if ($?) {python .\setup.py install}

            # - run:
            #       name: Run pyinstaller
            #       command: pyinstaller --clean -y --dist C:\Users\circleci\dist\ PA.spec

            - run: python -m nuitka --standalone --assume-yes-for-downloads --include-data-files=VERSION=VERSION --include-data-files=server_config.cfg=server_config.cfg --include-data-dir=static=static --include-data-dir=templates=templates --windows-icon-from-ico=static/favicon.ico ./planarally.py

            - run:
                  name: Zip artifacts
                  command: |
                      $VERSION=$(Get-Content -TotalCount 1 VERSION)
                      Compress-Archive -Path .\planarally.dist -DestinationPath C:\Users\circleci\archives\planarally-windows-${VERSION}.zip

            - run:
                  name: Install ghr
                  command: go install github.com/tcnksm/ghr@latest

            # - when:
            #       condition:
            #           not:
            #               equal: [ci-test, << pipeline.git.branch >>]
            #       steps:
            - run:
                  name: Publish release on github
                  command: |
                      $VERSION=$(Get-Content -TotalCount 1 VERSION)
                      ~\go\bin\ghr.exe -t $env:GITHUB_TOKEN -u $env:CIRCLE_PROJECT_USERNAME -r $env:CIRCLE_PROJECT_REPONAME -c $env:CIRCLE_SHA1 -replace $VERSION C:\Users\circleci\archives

workflows:
    version: 2
    build:
        jobs:
            - build-windows:
                  requires:
                      - build-client
                  filters:
                      branches:
                          #   only: ci-test  # MAKE SURE TO CONDITION OR RENAME UPLOADED FILES TO GITHUB!!
                          ignore: /.*/
                      tags:
                          only: /^v\d+\.\d+\.\d+[-a-zA-Z0-9]*$/
            - build-client:
                  filters:
                      branches:
                          #   only: ci-test  # MAKE SURE TO CONDITION OR RENAME UPLOADED FILES TO GITHUB!!
                          ignore: /.*/
                      tags:
                          only: /^v\d+\.\d+\.\d+[-a-zA-Z0-9]*$/
            - release-server:
                  requires:
                      - build-client
                  filters:
                      branches:
                          #   only: ci-test  # MAKE SURE TO CONDITION OR RENAME UPLOADED FILES TO GITHUB!!
                          ignore: /.*/
                      tags:
                          only: /^v\d+\.\d+\.\d+[-a-zA-Z0-9]*$/
