#Using unix socket as upstream server
upstream pa {
	server unix:/tmp/planarally.sock fail_timeout=0;
}

#Forward http to https
server {
	listen 80;
	listen [::]:80; #IPV6
	server_name dnd.example.com;
	return 301 https://www.$server_name$request_uri; 
}


server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2; #IPV6

	index index.htm;
  
	client_max_body_size 4G;
	server_name dnd.example.com;
	
#	#####
#	#protection against abuse - without it anyone can create their account
#	
#	#if you want to be accessible only with login+local network change "any" to "all"
#	satisfy any;  
#	#httpaswd fil for protection with login
#	auth_basic	"Enter credentials";
#	auth_basic_user_file /path/to/.httpaswd;
#	#allow from local network - adjust for your network
#	allow 192.168.0.0/16; 
#	allow fe80::/10;
#	#####
	
	location / {
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect off;
		proxy_buffering off;
		proxy_pass http://pa/;
	}

	location /socket.io/ {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_pass_request_headers on;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://pa/socket.io/;
	}

	location /static {
		root /path/to/PlanarAlly/server;
	}


	# SSL Certs, adjust to your location
	ssl_certificate /etc/letsencrypt/live/dnd.example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dnd.example.com/privkey.pem;

	#If you have problems connecting from older systems, remove these settings
	ssl_session_timeout 1d;
	ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
	ssl_session_tickets off;
	ssl_protocols TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/letsencrypt/live/dnd.exaple.com/chain.pem;

}
