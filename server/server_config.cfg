[Webserver]
# You can choose to use a HOST:PORT connection or a socket file to listen on
# If you specifiy a socket, it will be used instead of the HTTP:PORT connection
host = 0.0.0.0
port = 8000
# socket = /tmp/planarally.sock

ssl = false
# the ssl_ options are only required if ssl is set
# modify these to your actual keys!
ssl_fullchain = cert/fullchain.pem
ssl_privkey = cert/privkey.pem

# Allowed CORS origins
#     If not specified, only the host runnig the server is allowed
#     This value is passed to the socketio server:
#         https://python-socketio.readthedocs.io/en/latest/api.html#asyncserver-class
#     IMPORTANT TO NOTE HOWEVER is that this config file already interprets strings by default
#     and you thus do not have to add extra ''.
#     e.g. to allow cors on all simply write *  and NOT '*'
#     If you want to pass lists, check the information on python configparser's module to see how you should write it here
# cors_allowed_origins = *

# This limits the maximum size a single request to the server can be.
# This does _not_ limit the maximum size of assets.
# Campaign uploads will be chunked by the client according to this setting.
# Assets are currently sent in a chunked fashion over a websocket, so this is not relevant for them yet.
# Defaults to 10 * 1024 ** 2 = 10 MB
max_upload_size_in_bytes = 10_485_760

# Configuration limits for User asset uploads
# Single asset is imply the max allowed upload size
# Total asset is the total sum of all assets the user has uploaded
# These settings only apply to checks done on new uploads and not on existing assets
# (i.e. no assets will be removed if they're already over the limit when these settings are changed)
#
# A number <=0 means no limit
max_single_asset_size_in_bytes = 0
max_total_asset_size_in_bytes = 0

[General]
save_file = planar.sqlite
#assets_directory = 
#public_name = 

# These settings are used for log rotating,
# see https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler for details
max_log_size_in_bytes = 200_000
max_log_backups = 5

allow_signups = true

enable_export = true

[APIserver]
# The API server is an administration server on which some API calls can be made.
# It should use a different port or socket than the main webserver.
# It's hosted on 127.0.0.1 by default instead of 0.0.0.0
enabled = false

# You can choose to use a HOST:PORT connection or a socket file to listen on
# If you specifiy a socket, it will be used instead of the HTTP:PORT connection
host = 127.0.0.1
port = 8001
# socket = /tmp/planarally.sock

ssl = false
# the ssl_ options are only required if ssl is set
# modify these to your actual keys!
ssl_fullchain = cert/fullchain.pem
ssl_privkey = cert/privkey.pem

# Allowed CORS origins
#     If not specified, only the host runnig the server is allowed
#     This value is passed to the socketio server:
#         https://python-socketio.readthedocs.io/en/latest/api.html#asyncserver-class
#     IMPORTANT TO NOTE HOWEVER is that this config file already interprets strings by default
#     and you thus do not have to add extra ''.
#     e.g. to allow cors on all simply write *  and NOT '*'
#     If you want to pass lists, check the information on python configparser's module to see how you should write it here
# cors_allowed_origins = *

